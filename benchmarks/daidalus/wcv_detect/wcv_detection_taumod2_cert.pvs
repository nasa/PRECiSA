% This file is automatically generated by PRECiSA 

wcv_detection_taumod2_cert: THEORY
BEGIN
IMPORTING PRECiSA@strategies
IMPORTING float_bounded_axiomatic@aerr_ulp__double
IMPORTING float_bounded_axiomatic@aerr_ulp__single
IMPORTING wcv_detection_taumod2
IMPORTING wcv_detection_taumod2_real

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

Delta_0_error (e_sx, e_sy, e_vx, e_vy, e_D: nonneg_real, r_sx, r_sy, r_vx, r_vy, r_D: real): nonneg_real = aerr_ulp_dp_sub(((r_D * r_D) * sq_real(r_vx, r_vy)), aerr_ulp_dp_mul((r_D * r_D), aerr_ulp_dp_mul(r_D, e_D, r_D, e_D), sq_real(r_vx, r_vy), sq_error(e_vx, e_vy, r_vx, r_vy)), (cross_product_real(r_sx, r_sy, r_vx, r_vy) * cross_product_real(r_sx, r_sy, r_vx, r_vy)), aerr_ulp_dp_mul(cross_product_real(r_sx, r_sy, r_vx, r_vy), cross_product_error(e_sx, e_sy, e_vx, e_vy, r_sx, r_sy, r_vx, r_vy), cross_product_real(r_sx, r_sy, r_vx, r_vy), cross_product_error(e_sx, e_sy, e_vx, e_vy, r_sx, r_sy, r_vx, r_vy)))


Delta_0 : LEMMA
FORALL(e_sx, e_sy, e_vx, e_vy, e_D: nonneg_real, r_sx, r_sy, r_vx, r_vy, r_D: real, sx: double, sy: double, vx: double, vy: double, D: double):
finite?_double(cross_product(sx, sy, vx, vy)) AND finite?_double(sq(vx, vy)) AND finite?_double(D) AND finite?_double(sx) AND finite?_double(sy) AND finite?_double(vx) AND finite?_double(vy) AND finite?_double(Dsub(Dmul(Dmul(D, D), sq(vx, vy)), Dmul(cross_product(sx, sy, vx, vy), cross_product(sx, sy, vx, vy)))) AND finite?_double(Dmul(cross_product(sx, sy, vx, vy), cross_product(sx, sy, vx, vy))) AND finite?_double(Dmul(D, D)) AND finite?_double(Dmul(Dmul(D, D), sq(vx, vy)))
AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(vy) - r_vy)<=e_vy AND abs(DtoR(D) - r_D)<=e_D
IMPLIES
abs(DtoR(Delta(sx, sy, vx, vy, D)) - Delta_real(r_sx, r_sy, r_vx, r_vy, r_D)) <= Delta_0_error(e_sx, e_sy, e_vx, e_vy, e_D, r_sx, r_sy, r_vx, r_vy, r_D)


%|- Delta_0: PROOF
%|- (precisa)
%|- QED


Delta_error(e_sx, e_sy, e_vx, e_vy, e_D: nonneg_real, r_sx, r_sy, r_vx, r_vy, r_D: real): nonneg_real = Delta_0_error(e_sx, e_sy, e_vx, e_vy, e_D, r_sx, r_sy, r_vx, r_vy, r_D)

Theta_D_neg_0_error (e_D, e_sx, e_sy, e_vx, e_vy: nonneg_real, r_D, r_sx, r_sy, r_vx, r_vy: real): nonneg_real = root_neg_error(sq_error(e_vx, e_vy, r_vx, r_vy), aerr_ulp_dp_mul_p2l((1:: nat), inner_product_error(e_sx, e_sy, e_vx, e_vy, r_sx, r_sy, r_vx, r_vy)), aerr_ulp_dp_sub(sq_real(r_sx, r_sy), sq_error(e_sx, e_sy, r_sx, r_sy), (r_D * r_D), aerr_ulp_dp_mul(r_D, e_D, r_D, e_D)), sq_real(r_vx, r_vy), (2 * inner_product_real(r_sx, r_sy, r_vx, r_vy)), (sq_real(r_sx, r_sy) - (r_D * r_D)))


Theta_D_neg_0 : LEMMA
FORALL(e_D, e_sx, e_sy, e_vx, e_vy: nonneg_real, r_D, r_sx, r_sy, r_vx, r_vy: real, D: double, sx: double, sy: double, vx: double, vy: double):
int_in_range?_double(2) AND finite?_double(inner_product(sx, sy, vx, vy)) AND finite?_double(root_neg(sq(vx, vy), Dmul(2, inner_product(sx, sy, vx, vy)), Dsub(sq(sx, sy), Dmul(D, D)))) AND finite?_double(sq(sx, sy)) AND finite?_double(sq(vx, vy)) AND finite?_double(D) AND finite?_double(sx) AND finite?_double(sy) AND finite?_double(vx) AND finite?_double(vy) AND finite?_double(Dsub(sq(sx, sy), Dmul(D, D))) AND finite?_double(Dmul(2, inner_product(sx, sy, vx, vy))) AND finite?_double(Dmul(D, D))
AND
abs(DtoR(D) - r_D)<=e_D AND abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(vy) - r_vy)<=e_vy
IMPLIES
abs(DtoR(Theta_D_neg(D, sx, sy, vx, vy)) - Theta_D_neg_real(r_D, r_sx, r_sy, r_vx, r_vy)) <= Theta_D_neg_0_error(e_D, e_sx, e_sy, e_vx, e_vy, r_D, r_sx, r_sy, r_vx, r_vy)


%|- Theta_D_neg_0: PROOF
%|- (precisa)
%|- QED


Theta_D_neg_error(e_D, e_sx, e_sy, e_vx, e_vy: nonneg_real, r_D, r_sx, r_sy, r_vx, r_vy: real): nonneg_real = Theta_D_neg_0_error(e_D, e_sx, e_sy, e_vx, e_vy, r_D, r_sx, r_sy, r_vx, r_vy)

Theta_D_pos_0_error (e_D, e_sx, e_sy, e_vx, e_vy: nonneg_real, r_D, r_sx, r_sy, r_vx, r_vy: real): nonneg_real = root_pos_error(sq_error(e_vx, e_vy, r_vx, r_vy), aerr_ulp_dp_mul_p2l((1:: nat), inner_product_error(e_sx, e_sy, e_vx, e_vy, r_sx, r_sy, r_vx, r_vy)), aerr_ulp_dp_sub(sq_real(r_sx, r_sy), sq_error(e_sx, e_sy, r_sx, r_sy), (r_D * r_D), aerr_ulp_dp_mul(r_D, e_D, r_D, e_D)), sq_real(r_vx, r_vy), (2 * inner_product_real(r_sx, r_sy, r_vx, r_vy)), (sq_real(r_sx, r_sy) - (r_D * r_D)))


Theta_D_pos_0 : LEMMA
FORALL(e_D, e_sx, e_sy, e_vx, e_vy: nonneg_real, r_D, r_sx, r_sy, r_vx, r_vy: real, D: double, sx: double, sy: double, vx: double, vy: double):
int_in_range?_double(2) AND finite?_double(inner_product(sx, sy, vx, vy)) AND finite?_double(root_pos(sq(vx, vy), Dmul(2, inner_product(sx, sy, vx, vy)), Dsub(sq(sx, sy), Dmul(D, D)))) AND finite?_double(sq(sx, sy)) AND finite?_double(sq(vx, vy)) AND finite?_double(D) AND finite?_double(sx) AND finite?_double(sy) AND finite?_double(vx) AND finite?_double(vy) AND finite?_double(Dsub(sq(sx, sy), Dmul(D, D))) AND finite?_double(Dmul(2, inner_product(sx, sy, vx, vy))) AND finite?_double(Dmul(D, D))
AND
abs(DtoR(D) - r_D)<=e_D AND abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(vy) - r_vy)<=e_vy
IMPLIES
abs(DtoR(Theta_D_pos(D, sx, sy, vx, vy)) - Theta_D_pos_real(r_D, r_sx, r_sy, r_vx, r_vy)) <= Theta_D_pos_0_error(e_D, e_sx, e_sy, e_vx, e_vy, r_D, r_sx, r_sy, r_vx, r_vy)


%|- Theta_D_pos_0: PROOF
%|- (precisa)
%|- QED


Theta_D_pos_error(e_D, e_sx, e_sy, e_vx, e_vy: nonneg_real, r_D, r_sx, r_sy, r_vx, r_vy: real): nonneg_real = Theta_D_pos_0_error(e_D, e_sx, e_sy, e_vx, e_vy, r_D, r_sx, r_sy, r_vx, r_vy)

Theta_H_neg_0_error (e_sz, e_nzvz, e_H: nonneg_real, r_sz, r_nzvz, r_H: real): nonneg_real = aerr_ulp_dp_div(((-(sign_real(r_nzvz)) * r_H) - r_sz), aerr_ulp_dp_sub((-(sign_real(r_nzvz)) * r_H), aerr_ulp_dp_mul(-(sign_real(r_nzvz)), aerr_int_neg(sign_real(r_nzvz), sign_error(e_nzvz, r_nzvz)), r_H, e_H), r_sz, e_sz), r_nzvz, e_nzvz)


Theta_H_neg_0 : LEMMA
FORALL(e_sz, e_nzvz, e_H: nonneg_real, r_sz, r_nzvz, r_H: real, sz: double, nzvz: double, H: double):
int_in_range?_double(sign(nzvz)) AND finite?_double(H) AND finite?_double(nzvz) AND finite?_double(sz) AND finite?_double(Dsub(Dmul(Ineg(sign(nzvz)), H), sz)) AND finite?_double(Dmul(Ineg(sign(nzvz)), H)) AND finite?_double(Ddiv(Dsub(Dmul(Ineg(sign(nzvz)), H), sz), nzvz)) AND int_in_range?_double(Ineg(sign(nzvz)))
AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(nzvz) - r_nzvz)<=e_nzvz AND abs(DtoR(H) - r_H)<=e_H
AND (((TRUE AND (r_nzvz /= 0)) AND (TRUE AND (nzvz /= ItoD(0)))))
IMPLIES
abs(DtoR(Theta_H_neg(sz, nzvz, H)) - Theta_H_neg_real(r_sz, r_nzvz, r_H)) <= Theta_H_neg_0_error(e_sz, e_nzvz, e_H, r_sz, r_nzvz, r_H)


%|- Theta_H_neg_0: PROOF
%|- (precisa)
%|- QED


Theta_H_neg_error(e_sz, e_nzvz, e_H: nonneg_real, r_sz, r_nzvz, r_H: real): nonneg_real = Theta_H_neg_0_error(e_sz, e_nzvz, e_H, r_sz, r_nzvz, r_H)

Theta_H_pos_0_error (e_sz, e_nzvz, e_H: nonneg_real, r_sz, r_nzvz, r_H: real): nonneg_real = aerr_ulp_dp_div(((sign_real(r_nzvz) * r_H) - r_sz), aerr_ulp_dp_sub((sign_real(r_nzvz) * r_H), aerr_ulp_dp_mul(sign_real(r_nzvz), sign_error(e_nzvz, r_nzvz), r_H, e_H), r_sz, e_sz), r_nzvz, e_nzvz)


Theta_H_pos_0 : LEMMA
FORALL(e_sz, e_nzvz, e_H: nonneg_real, r_sz, r_nzvz, r_H: real, sz: double, nzvz: double, H: double):
int_in_range?_double(sign(nzvz)) AND finite?_double(H) AND finite?_double(nzvz) AND finite?_double(sz) AND finite?_double(Dsub(Dmul(sign(nzvz), H), sz)) AND finite?_double(Dmul(sign(nzvz), H)) AND finite?_double(Ddiv(Dsub(Dmul(sign(nzvz), H), sz), nzvz))
AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(nzvz) - r_nzvz)<=e_nzvz AND abs(DtoR(H) - r_H)<=e_H
AND (((TRUE AND (r_nzvz /= 0)) AND (TRUE AND (nzvz /= ItoD(0)))))
IMPLIES
abs(DtoR(Theta_H_pos(sz, nzvz, H)) - Theta_H_pos_real(r_sz, r_nzvz, r_H)) <= Theta_H_pos_0_error(e_sz, e_nzvz, e_H, r_sz, r_nzvz, r_H)


%|- Theta_H_pos_0: PROOF
%|- (precisa)
%|- QED


Theta_H_pos_error(e_sz, e_nzvz, e_H: nonneg_real, r_sz, r_nzvz, r_H: real): nonneg_real = Theta_H_pos_0_error(e_sz, e_nzvz, e_H, r_sz, r_nzvz, r_H)

coalt_entry_0_error (e_sz, e_nzvz, e_TCOA, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_TCOA, r_ZTHR: real): nonneg_real = max(Theta_H_neg_error(e_sz, e_nzvz, aerr_ulp_dp_mul(abs(r_nzvz), aerr_ulp_dp_abs(r_nzvz, e_nzvz), r_TCOA, e_TCOA), r_sz, r_nzvz, (abs(r_nzvz) * r_TCOA)), Theta_H_neg_error(e_sz, e_nzvz, e_ZTHR, r_sz, r_nzvz, r_ZTHR))


coalt_entry_0 : LEMMA
FORALL(e_sz, e_nzvz, e_TCOA, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_TCOA, r_ZTHR: real, sz: double, nzvz: double, TCOA: double, ZTHR: double):
finite?_double(Theta_H_neg(sz, nzvz, ZTHR)) AND finite?_double(ZTHR) AND finite?_double(nzvz) AND finite?_double(sz) AND finite?_double(Theta_H_neg(sz, nzvz, Dmul(Dabs(nzvz), TCOA))) AND finite?_double(TCOA) AND finite?_double(nzvz) AND finite?_double(sz) AND finite?_double(Dmul(Dabs(nzvz), TCOA)) AND finite?_double(Dabs(nzvz))
AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(nzvz) - r_nzvz)<=e_nzvz AND abs(DtoR(TCOA) - r_TCOA)<=e_TCOA AND abs(DtoR(ZTHR) - r_ZTHR)<=e_ZTHR
AND (((NOT(((r_ZTHR - (abs(r_nzvz) * r_TCOA)) <= 0)) AND TRUE) AND (NOT((Dsub(ZTHR, Dmul(Dabs(nzvz), TCOA)) <= 0)) AND TRUE)) OR ((((r_ZTHR - (abs(r_nzvz) * r_TCOA)) <= 0) AND TRUE) AND ((Dsub(ZTHR, Dmul(Dabs(nzvz), TCOA)) <= 0) AND TRUE)))
IMPLIES
abs(DtoR(coalt_entry(sz, nzvz, TCOA, ZTHR)) - coalt_entry_real(r_sz, r_nzvz, r_TCOA, r_ZTHR)) <= coalt_entry_0_error(e_sz, e_nzvz, e_TCOA, e_ZTHR, r_sz, r_nzvz, r_TCOA, r_ZTHR)


%|- coalt_entry_0: PROOF
%|- (precisa)
%|- QED


coalt_entry_1_error (e_sz, e_nzvz, e_TCOA, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_TCOA, r_ZTHR: real): nonneg_real = max((Theta_H_neg_error(e_sz, e_nzvz, e_ZTHR, r_sz, r_nzvz, r_ZTHR) + abs((Theta_H_neg_real(r_sz, r_nzvz, r_ZTHR) - Theta_H_neg_real(r_sz, r_nzvz, (abs(r_nzvz) * r_TCOA))))), (Theta_H_neg_error(e_sz, e_nzvz, aerr_ulp_dp_mul(abs(r_nzvz), aerr_ulp_dp_abs(r_nzvz, e_nzvz), r_TCOA, e_TCOA), r_sz, r_nzvz, (abs(r_nzvz) * r_TCOA)) + abs((Theta_H_neg_real(r_sz, r_nzvz, (abs(r_nzvz) * r_TCOA)) - Theta_H_neg_real(r_sz, r_nzvz, r_ZTHR)))))


coalt_entry_1 : LEMMA
FORALL(e_sz, e_nzvz, e_TCOA, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_TCOA, r_ZTHR: real, sz: double, nzvz: double, TCOA: double, ZTHR: double):
finite?_double(Theta_H_neg(sz, nzvz, ZTHR)) AND finite?_double(ZTHR) AND finite?_double(nzvz) AND finite?_double(sz) AND finite?_double(Theta_H_neg(sz, nzvz, Dmul(Dabs(nzvz), TCOA))) AND finite?_double(TCOA) AND finite?_double(nzvz) AND finite?_double(sz) AND finite?_double(Dmul(Dabs(nzvz), TCOA)) AND finite?_double(Dabs(nzvz))
AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(nzvz) - r_nzvz)<=e_nzvz AND abs(DtoR(TCOA) - r_TCOA)<=e_TCOA AND abs(DtoR(ZTHR) - r_ZTHR)<=e_ZTHR
AND (((NOT(((r_ZTHR - (abs(r_nzvz) * r_TCOA)) <= 0)) AND TRUE) AND ((Dsub(ZTHR, Dmul(Dabs(nzvz), TCOA)) <= 0) AND TRUE)) OR ((((r_ZTHR - (abs(r_nzvz) * r_TCOA)) <= 0) AND TRUE) AND (NOT((Dsub(ZTHR, Dmul(Dabs(nzvz), TCOA)) <= 0)) AND TRUE)))
IMPLIES
abs(DtoR(coalt_entry(sz, nzvz, TCOA, ZTHR)) - coalt_entry_real(r_sz, r_nzvz, r_TCOA, r_ZTHR)) <= coalt_entry_1_error(e_sz, e_nzvz, e_TCOA, e_ZTHR, r_sz, r_nzvz, r_TCOA, r_ZTHR)


%|- coalt_entry_1: PROOF
%|- (precisa)
%|- QED


coalt_entry_error(e_sz, e_nzvz, e_TCOA, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_TCOA, r_ZTHR: real): nonneg_real = max(coalt_entry_0_error(e_sz, e_nzvz, e_TCOA, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_TCOA, r_ZTHR: real), coalt_entry_1_error(e_sz, e_nzvz, e_TCOA, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_TCOA, r_ZTHR: real))

coalt_exit_0_error (e_sz, e_nzvz, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_ZTHR: real): nonneg_real = Theta_H_pos_error(e_sz, e_nzvz, e_ZTHR, r_sz, r_nzvz, r_ZTHR)


coalt_exit_0 : LEMMA
FORALL(e_sz, e_nzvz, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_ZTHR: real, sz: double, nzvz: double, ZTHR: double):
finite?_double(Theta_H_pos(sz, nzvz, ZTHR)) AND finite?_double(ZTHR) AND finite?_double(nzvz) AND finite?_double(sz)
AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(nzvz) - r_nzvz)<=e_nzvz AND abs(DtoR(ZTHR) - r_ZTHR)<=e_ZTHR
IMPLIES
abs(DtoR(coalt_exit(sz, nzvz, ZTHR)) - coalt_exit_real(r_sz, r_nzvz, r_ZTHR)) <= coalt_exit_0_error(e_sz, e_nzvz, e_ZTHR, r_sz, r_nzvz, r_ZTHR)


%|- coalt_exit_0: PROOF
%|- (precisa)
%|- QED


coalt_exit_error(e_sz, e_nzvz, e_ZTHR: nonneg_real, r_sz, r_nzvz, r_ZTHR: real): nonneg_real = coalt_exit_0_error(e_sz, e_nzvz, e_ZTHR, r_sz, r_nzvz, r_ZTHR)

cross_product_0_error (e_sx, e_sy, e_vx, e_vy: nonneg_real, r_sx, r_sy, r_vx, r_vy: real): nonneg_real = aerr_ulp_dp_sub((r_sx * r_vy), aerr_ulp_dp_mul(r_sx, e_sx, r_vy, e_vy), (r_sy * r_vx), aerr_ulp_dp_mul(r_sy, e_sy, r_vx, e_vx))


cross_product_0 : LEMMA
FORALL(e_sx, e_sy, e_vx, e_vy: nonneg_real, r_sx, r_sy, r_vx, r_vy: real, sx: double, sy: double, vx: double, vy: double):
finite?_double(sx) AND finite?_double(sy) AND finite?_double(vx) AND finite?_double(vy) AND finite?_double(Dsub(Dmul(sx, vy), Dmul(sy, vx))) AND finite?_double(Dmul(sx, vy)) AND finite?_double(Dmul(sy, vx))
AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(vy) - r_vy)<=e_vy
IMPLIES
abs(DtoR(cross_product(sx, sy, vx, vy)) - cross_product_real(r_sx, r_sy, r_vx, r_vy)) <= cross_product_0_error(e_sx, e_sy, e_vx, e_vy, r_sx, r_sy, r_vx, r_vy)


%|- cross_product_0: PROOF
%|- (precisa)
%|- QED


cross_product_error(e_sx, e_sy, e_vx, e_vy: nonneg_real, r_sx, r_sy, r_vx, r_vy: real): nonneg_real = cross_product_0_error(e_sx, e_sy, e_vx, e_vy, r_sx, r_sy, r_vx, r_vy)

discr_0_error (e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real): nonneg_real = aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul_p2l((2:: nat), e_a), r_c, e_c))


discr_0 : LEMMA
FORALL(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real, a: double, b: double, c: double):
int_in_range?_double(4) AND finite?_double(a) AND finite?_double(b) AND finite?_double(c) AND finite?_double(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))) AND finite?_double(Dmul(4, a)) AND finite?_double(Dmul(b, b)) AND finite?_double(Dmul(Dmul(4, a), c))
AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b AND abs(DtoR(c) - r_c)<=e_c
AND (((TRUE AND (2 < (ieee754_double_precision - Fexp(a)))) AND (TRUE AND TRUE)))
IMPLIES
abs(DtoR(discr(a, b, c)) - discr_real(r_a, r_b, r_c)) <= discr_0_error(e_a, e_b, e_c, r_a, r_b, r_c)


%|- discr_0: PROOF
%|- (precisa)
%|- QED


discr_error(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real): nonneg_real = discr_0_error(e_a, e_b, e_c, r_a, r_b, r_c)

inner_product_0_error (e_sx, e_sy, e_vx, e_vy: nonneg_real, r_sx, r_sy, r_vx, r_vy: real): nonneg_real = aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy))


inner_product_0 : LEMMA
FORALL(e_sx, e_sy, e_vx, e_vy: nonneg_real, r_sx, r_sy, r_vx, r_vy: real, sx: double, sy: double, vx: double, vy: double):
finite?_double(sx) AND finite?_double(sy) AND finite?_double(vx) AND finite?_double(vy) AND finite?_double(Dadd(Dmul(sx, vx), Dmul(sy, vy))) AND finite?_double(Dmul(sx, vx)) AND finite?_double(Dmul(sy, vy))
AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(vy) - r_vy)<=e_vy
IMPLIES
abs(DtoR(inner_product(sx, sy, vx, vy)) - inner_product_real(r_sx, r_sy, r_vx, r_vy)) <= inner_product_0_error(e_sx, e_sy, e_vx, e_vy, r_sx, r_sy, r_vx, r_vy)


%|- inner_product_0: PROOF
%|- (precisa)
%|- QED


inner_product_error(e_sx, e_sy, e_vx, e_vy: nonneg_real, r_sx, r_sy, r_vx, r_vy: real): nonneg_real = inner_product_0_error(e_sx, e_sy, e_vx, e_vy, r_sx, r_sy, r_vx, r_vy)

max__0_error (e_a, e_b: nonneg_real, r_a, r_b: real): nonneg_real = max(e_b, e_a)


max__0 : LEMMA
FORALL(e_a, e_b: nonneg_real, r_a, r_b: real, a: double, b: double):
finite?_double(a) AND finite?_double(b)
AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b
AND (((NOT(((r_a - r_b) < 0)) AND TRUE) AND (NOT((Dsub(a, b) < 0)) AND TRUE)) OR ((((r_a - r_b) < 0) AND TRUE) AND ((Dsub(a, b) < 0) AND TRUE)))
IMPLIES
abs(DtoR(max_(a, b)) - max__real(r_a, r_b)) <= max__0_error(e_a, e_b, r_a, r_b)


%|- max__0: PROOF
%|- (precisa)
%|- QED


max__1_error (e_a, e_b: nonneg_real, r_a, r_b: real): nonneg_real = max((e_a + abs((r_a - r_b))), (e_b + abs((r_b - r_a))))


max__1 : LEMMA
FORALL(e_a, e_b: nonneg_real, r_a, r_b: real, a: double, b: double):
finite?_double(a) AND finite?_double(b)
AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b
AND (((NOT(((r_a - r_b) < 0)) AND TRUE) AND ((Dsub(a, b) < 0) AND TRUE)) OR ((((r_a - r_b) < 0) AND TRUE) AND (NOT((Dsub(a, b) < 0)) AND TRUE)))
IMPLIES
abs(DtoR(max_(a, b)) - max__real(r_a, r_b)) <= max__1_error(e_a, e_b, r_a, r_b)


%|- max__1: PROOF
%|- (precisa)
%|- QED


max__error(e_a, e_b: nonneg_real, r_a, r_b: real): nonneg_real = max(max__0_error(e_a, e_b: nonneg_real, r_a, r_b: real), max__1_error(e_a, e_b: nonneg_real, r_a, r_b: real))

min__0_error (e_a, e_b: nonneg_real, r_a, r_b: real): nonneg_real = max(e_b, e_a)


min__0 : LEMMA
FORALL(e_a, e_b: nonneg_real, r_a, r_b: real, a: double, b: double):
finite?_double(a) AND finite?_double(b)
AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b
AND (((NOT(((r_a - r_b) > 0)) AND TRUE) AND (NOT((Dsub(a, b) > 0)) AND TRUE)) OR ((((r_a - r_b) > 0) AND TRUE) AND ((Dsub(a, b) > 0) AND TRUE)))
IMPLIES
abs(DtoR(min_(a, b)) - min__real(r_a, r_b)) <= min__0_error(e_a, e_b, r_a, r_b)


%|- min__0: PROOF
%|- (precisa)
%|- QED


min__1_error (e_a, e_b: nonneg_real, r_a, r_b: real): nonneg_real = max((e_a + abs((r_a - r_b))), (e_b + abs((r_b - r_a))))


min__1 : LEMMA
FORALL(e_a, e_b: nonneg_real, r_a, r_b: real, a: double, b: double):
finite?_double(a) AND finite?_double(b)
AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b
AND (((NOT(((r_a - r_b) > 0)) AND TRUE) AND ((Dsub(a, b) > 0) AND TRUE)) OR ((((r_a - r_b) > 0) AND TRUE) AND (NOT((Dsub(a, b) > 0)) AND TRUE)))
IMPLIES
abs(DtoR(min_(a, b)) - min__real(r_a, r_b)) <= min__1_error(e_a, e_b, r_a, r_b)


%|- min__1: PROOF
%|- (precisa)
%|- QED


min__error(e_a, e_b: nonneg_real, r_a, r_b: real): nonneg_real = max(min__0_error(e_a, e_b: nonneg_real, r_a, r_b: real), min__1_error(e_a, e_b: nonneg_real, r_a, r_b: real))

proj_0_error (e_sx, e_vx, e_t: nonneg_real, r_sx, r_vx, r_t: real): nonneg_real = aerr_ulp_dp_add(r_sx, e_sx, (r_vx * r_t), aerr_ulp_dp_mul(r_vx, e_vx, r_t, e_t))


proj_0 : LEMMA
FORALL(e_sx, e_vx, e_t: nonneg_real, r_sx, r_vx, r_t: real, sx: double, vx: double, t: double):
finite?_double(sx) AND finite?_double(t) AND finite?_double(vx) AND finite?_double(Dadd(sx, Dmul(vx, t))) AND finite?_double(Dmul(vx, t))
AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(t) - r_t)<=e_t
IMPLIES
abs(DtoR(proj(sx, vx, t)) - proj_real(r_sx, r_vx, r_t)) <= proj_0_error(e_sx, e_vx, e_t, r_sx, r_vx, r_t)


%|- proj_0: PROOF
%|- (precisa)
%|- QED


proj_error(e_sx, e_vx, e_t: nonneg_real, r_sx, r_vx, r_t: real): nonneg_real = proj_0_error(e_sx, e_vx, e_t, r_sx, r_vx, r_t)

root_neg_0_error (e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real): nonneg_real = max(aerr_ulp_dp_div((-(r_b) - sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c))))), aerr_ulp_dp_sub(-(r_b), aerr_ulp_dp_neg(r_b, e_b), sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c)))), aerr_ulp_dp_sqt(abs(((r_b * r_b) - ((4 * r_a) * r_c))), aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul_p2l((2:: nat), e_a), r_c, e_c))))), (2 * r_a), aerr_ulp_dp_mul_p2l((1:: nat), e_a)), (0 / 1))


root_neg_0 : LEMMA
FORALL(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real, a: double, b: double, c: double):
int_in_range?_double(0) AND int_in_range?_double(2) AND int_in_range?_double(4) AND finite?_double(a) AND finite?_double(b) AND finite?_double(c) AND finite?_double(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))) AND finite?_double(Dsub(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c)))))) AND finite?_double(Dmul(2, a)) AND finite?_double(Dmul(4, a)) AND finite?_double(Dmul(b, b)) AND finite?_double(Dmul(Dmul(4, a), c)) AND finite?_double(Ddiv(Dsub(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))), Dmul(2, a))) AND finite?_double(Dneg(b)) AND finite?_double(Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))) AND finite?_double(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))
AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b AND abs(DtoR(c) - r_c)<=e_c
AND (((((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0)) AND ((((2 < (ieee754_double_precision - Fexp(a))) AND ((abs(((r_b * r_b) - ((4 * r_a) * r_c))) - aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul_p2r((2:: nat), e_a), r_c, e_c)))) >= 0)) AND (1 < (ieee754_double_precision - Fexp(a)))) AND ((2 * r_a) /= 0))) AND (((Dsub(Dmul(b, b), Dmul(Dmul(4, a), c)) >= 0) AND (a /= 0)) AND (Dmul(2, a) /= ItoD(0)))) OR ((NOT(((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0))) AND TRUE) AND (NOT(((Dsub(Dmul(b, b), Dmul(Dmul(4, a), c)) >= 0) AND (a /= 0))) AND TRUE)))
IMPLIES
abs(DtoR(root_neg(a, b, c)) - root_neg_real(r_a, r_b, r_c)) <= root_neg_0_error(e_a, e_b, e_c, r_a, r_b, r_c)


%|- root_neg_0: PROOF
%|- (precisa)
%|- QED


root_neg_1_error (e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real): nonneg_real = max(((0 / 1) + abs((0 - div_safe((-(r_b) - sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c))))), (2 * r_a))))), (aerr_ulp_dp_div((-(r_b) - sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c))))), aerr_ulp_dp_sub(-(r_b), aerr_ulp_dp_neg(r_b, e_b), sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c)))), aerr_ulp_dp_sqt(abs(((r_b * r_b) - ((4 * r_a) * r_c))), aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul_p2l((2:: nat), e_a), r_c, e_c))))), (2 * r_a), aerr_ulp_dp_mul_p2l((1:: nat), e_a)) + abs((div_safe((-(r_b) - sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c))))), (2 * r_a)) - 0))))


root_neg_1 : LEMMA
FORALL(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real, a: double, b: double, c: double):
int_in_range?_double(0) AND int_in_range?_double(2) AND int_in_range?_double(4) AND finite?_double(a) AND finite?_double(b) AND finite?_double(c) AND finite?_double(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))) AND finite?_double(Dsub(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c)))))) AND finite?_double(Dmul(2, a)) AND finite?_double(Dmul(4, a)) AND finite?_double(Dmul(b, b)) AND finite?_double(Dmul(Dmul(4, a), c)) AND finite?_double(Ddiv(Dsub(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))), Dmul(2, a))) AND finite?_double(Dneg(b)) AND finite?_double(Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))) AND finite?_double(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))
AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b AND abs(DtoR(c) - r_c)<=e_c
AND (((((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0)) AND ((((2 < (ieee754_double_precision - Fexp(a))) AND ((abs(((r_b * r_b) - ((4 * r_a) * r_c))) - aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul_p2r((2:: nat), e_a), r_c, e_c)))) >= 0)) AND (1 < (ieee754_double_precision - Fexp(a)))) AND ((2 * r_a) /= 0))) AND (NOT(((Dsub(Dmul(b, b), Dmul(Dmul(4, a), c)) >= 0) AND (a /= 0))) AND TRUE)) OR ((NOT(((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0))) AND ((((2 < (ieee754_double_precision - Fexp(a))) AND ((abs(((r_b * r_b) - ((4 * r_a) * r_c))) - aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul_p2r((2:: nat), e_a), r_c, e_c)))) >= 0)) AND (1 < (ieee754_double_precision - Fexp(a)))) AND ((2 * r_a) /= 0))) AND (((Dsub(Dmul(b, b), Dmul(Dmul(4, a), c)) >= 0) AND (a /= 0)) AND (Dmul(2, a) /= ItoD(0)))))
IMPLIES
abs(DtoR(root_neg(a, b, c)) - root_neg_real(r_a, r_b, r_c)) <= root_neg_1_error(e_a, e_b, e_c, r_a, r_b, r_c)


%|- root_neg_1: PROOF
%|- (precisa)
%|- QED


root_neg_error(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real): nonneg_real = max(root_neg_0_error(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real), root_neg_1_error(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real))

root_pos_0_error (e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real): nonneg_real = max(aerr_ulp_dp_div((-(r_b) + sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c))))), aerr_ulp_dp_add(-(r_b), aerr_ulp_dp_neg(r_b, e_b), sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c)))), aerr_ulp_dp_sqt(abs(((r_b * r_b) - ((4 * r_a) * r_c))), aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul_p2l((2:: nat), e_a), r_c, e_c))))), (2 * r_a), aerr_ulp_dp_mul_p2l((1:: nat), e_a)), (0 / 1))


root_pos_0 : LEMMA
FORALL(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real, a: double, b: double, c: double):
int_in_range?_double(0) AND int_in_range?_double(2) AND int_in_range?_double(4) AND finite?_double(a) AND finite?_double(b) AND finite?_double(c) AND finite?_double(Dadd(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c)))))) AND finite?_double(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))) AND finite?_double(Dmul(2, a)) AND finite?_double(Dmul(4, a)) AND finite?_double(Dmul(b, b)) AND finite?_double(Dmul(Dmul(4, a), c)) AND finite?_double(Ddiv(Dadd(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))), Dmul(2, a))) AND finite?_double(Dneg(b)) AND finite?_double(Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))) AND finite?_double(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))
AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b AND abs(DtoR(c) - r_c)<=e_c
AND (((((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0)) AND ((((2 < (ieee754_double_precision - Fexp(a))) AND ((abs(((r_b * r_b) - ((4 * r_a) * r_c))) - aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul_p2r((2:: nat), e_a), r_c, e_c)))) >= 0)) AND (1 < (ieee754_double_precision - Fexp(a)))) AND ((2 * r_a) /= 0))) AND (((Dsub(Dmul(b, b), Dmul(Dmul(4, a), c)) >= 0) AND (a /= 0)) AND (Dmul(2, a) /= ItoD(0)))) OR ((NOT(((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0))) AND TRUE) AND (NOT(((Dsub(Dmul(b, b), Dmul(Dmul(4, a), c)) >= 0) AND (a /= 0))) AND TRUE)))
IMPLIES
abs(DtoR(root_pos(a, b, c)) - root_pos_real(r_a, r_b, r_c)) <= root_pos_0_error(e_a, e_b, e_c, r_a, r_b, r_c)


%|- root_pos_0: PROOF
%|- (precisa)
%|- QED


root_pos_1_error (e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real): nonneg_real = max(((0 / 1) + abs((0 - div_safe((-(r_b) + sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c))))), (2 * r_a))))), (aerr_ulp_dp_div((-(r_b) + sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c))))), aerr_ulp_dp_add(-(r_b), aerr_ulp_dp_neg(r_b, e_b), sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c)))), aerr_ulp_dp_sqt(abs(((r_b * r_b) - ((4 * r_a) * r_c))), aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul_p2l((2:: nat), e_a), r_c, e_c))))), (2 * r_a), aerr_ulp_dp_mul_p2l((1:: nat), e_a)) + abs((div_safe((-(r_b) + sqrt_safe(abs(((r_b * r_b) - ((4 * r_a) * r_c))))), (2 * r_a)) - 0))))


root_pos_1 : LEMMA
FORALL(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real, a: double, b: double, c: double):
int_in_range?_double(0) AND int_in_range?_double(2) AND int_in_range?_double(4) AND finite?_double(a) AND finite?_double(b) AND finite?_double(c) AND finite?_double(Dadd(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c)))))) AND finite?_double(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))) AND finite?_double(Dmul(2, a)) AND finite?_double(Dmul(4, a)) AND finite?_double(Dmul(b, b)) AND finite?_double(Dmul(Dmul(4, a), c)) AND finite?_double(Ddiv(Dadd(Dneg(b), Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))), Dmul(2, a))) AND finite?_double(Dneg(b)) AND finite?_double(Dsqrt(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))) AND finite?_double(Dabs(Dsub(Dmul(b, b), Dmul(Dmul(4, a), c))))
AND
abs(DtoR(a) - r_a)<=e_a AND abs(DtoR(b) - r_b)<=e_b AND abs(DtoR(c) - r_c)<=e_c
AND (((((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0)) AND ((((2 < (ieee754_double_precision - Fexp(a))) AND ((abs(((r_b * r_b) - ((4 * r_a) * r_c))) - aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul_p2r((2:: nat), e_a), r_c, e_c)))) >= 0)) AND (1 < (ieee754_double_precision - Fexp(a)))) AND ((2 * r_a) /= 0))) AND (NOT(((Dsub(Dmul(b, b), Dmul(Dmul(4, a), c)) >= 0) AND (a /= 0))) AND TRUE)) OR ((NOT(((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0))) AND ((((2 < (ieee754_double_precision - Fexp(a))) AND ((abs(((r_b * r_b) - ((4 * r_a) * r_c))) - aerr_ulp_dp_abs(((r_b * r_b) - ((4 * r_a) * r_c)), aerr_ulp_dp_sub((r_b * r_b), aerr_ulp_dp_mul(r_b, e_b, r_b, e_b), ((4 * r_a) * r_c), aerr_ulp_dp_mul((4 * r_a), aerr_ulp_dp_mul_p2r((2:: nat), e_a), r_c, e_c)))) >= 0)) AND (1 < (ieee754_double_precision - Fexp(a)))) AND ((2 * r_a) /= 0))) AND (((Dsub(Dmul(b, b), Dmul(Dmul(4, a), c)) >= 0) AND (a /= 0)) AND (Dmul(2, a) /= ItoD(0)))))
IMPLIES
abs(DtoR(root_pos(a, b, c)) - root_pos_real(r_a, r_b, r_c)) <= root_pos_1_error(e_a, e_b, e_c, r_a, r_b, r_c)


%|- root_pos_1: PROOF
%|- (precisa)
%|- QED


root_pos_error(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real): nonneg_real = max(root_pos_0_error(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real), root_pos_1_error(e_a, e_b, e_c: nonneg_real, r_a, r_b, r_c: real))

sign_0_error (e_x: nonneg_real, r_x: real): nonneg_real = max((0 / 1), (0 / 1))


sign_0 : LEMMA
FORALL(e_x: nonneg_real, r_x: real, x: double):
int_in_range?_double(-1) AND int_in_range?_double(1)
AND
abs(DtoR(x) - r_x)<=e_x
AND (((NOT((r_x >= 0)) AND TRUE) AND (NOT((x >= 0)) AND TRUE)) OR (((r_x >= 0) AND TRUE) AND ((x >= 0) AND TRUE)))
IMPLIES
abs(sign(x) - sign_real(r_x)) <= sign_0_error(e_x, r_x)


%|- sign_0: PROOF
%|- (precisa)
%|- QED


sign_1_error (e_x: nonneg_real, r_x: real): nonneg_real = max(((0 / 1) + abs((-1 - 1))), ((0 / 1) + abs((1 - -1))))


sign_1 : LEMMA
FORALL(e_x: nonneg_real, r_x: real, x: double):
int_in_range?_double(-1) AND int_in_range?_double(1)
AND
abs(DtoR(x) - r_x)<=e_x
AND (((NOT((r_x >= 0)) AND TRUE) AND ((x >= 0) AND TRUE)) OR (((r_x >= 0) AND TRUE) AND (NOT((x >= 0)) AND TRUE)))
IMPLIES
abs(sign(x) - sign_real(r_x)) <= sign_1_error(e_x, r_x)


%|- sign_1: PROOF
%|- (precisa)
%|- QED


sign_error(e_x: nonneg_real, r_x: real): nonneg_real = max(sign_0_error(e_x: nonneg_real, r_x: real), sign_1_error(e_x: nonneg_real, r_x: real))

sq_0_error (e_sx, e_sy: nonneg_real, r_sx, r_sy: real): nonneg_real = inner_product_error(e_sx, e_sy, e_sx, e_sy, r_sx, r_sy, r_sx, r_sy)


sq_0 : LEMMA
FORALL(e_sx, e_sy: nonneg_real, r_sx, r_sy: real, sx: double, sy: double):
finite?_double(inner_product(sx, sy, sx, sy)) AND finite?_double(sx) AND finite?_double(sy)
AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(sy) - r_sy)<=e_sy
IMPLIES
abs(DtoR(sq(sx, sy)) - sq_real(r_sx, r_sy)) <= sq_0_error(e_sx, e_sy, r_sx, r_sy)


%|- sq_0: PROOF
%|- (precisa)
%|- QED


sq_error(e_sx, e_sy: nonneg_real, r_sx, r_sy: real): nonneg_real = sq_0_error(e_sx, e_sy, r_sx, r_sy)

taumod_0_error (e_sx, e_vx, e_sy, e_vy, e_DTHR: nonneg_real, r_sx, r_vx, r_sy, r_vy, r_DTHR: real): nonneg_real = max(aerr_ulp_dp_div(((r_DTHR * r_DTHR) - ((r_sx * r_sx) + (r_sy * r_sy))), aerr_ulp_dp_sub((r_DTHR * r_DTHR), aerr_ulp_dp_mul(r_DTHR, e_DTHR, r_DTHR, e_DTHR), ((r_sx * r_sx) + (r_sy * r_sy)), aerr_ulp_dp_add((r_sx * r_sx), aerr_ulp_dp_mul(r_sx, e_sx, r_sx, e_sx), (r_sy * r_sy), aerr_ulp_dp_mul(r_sy, e_sy, r_sy, e_sy))), ((r_sx * r_vx) + (r_sy * r_vy)), aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy))), (0 / 1))


taumod_0 : LEMMA
FORALL(e_sx, e_vx, e_sy, e_vy, e_DTHR: nonneg_real, r_sx, r_vx, r_sy, r_vy, r_DTHR: real, sx: double, vx: double, sy: double, vy: double, DTHR: double):
int_in_range?_double(-1) AND finite?_double(DTHR) AND finite?_double(sx) AND finite?_double(sy) AND finite?_double(vx) AND finite?_double(vy) AND finite?_double(Dadd(Dmul(sx, sx), Dmul(sy, sy))) AND finite?_double(Dadd(Dmul(sx, vx), Dmul(sy, vy))) AND finite?_double(Dsub(Dmul(DTHR, DTHR), Dadd(Dmul(sx, sx), Dmul(sy, sy)))) AND finite?_double(Dmul(DTHR, DTHR)) AND finite?_double(Dmul(sx, sx)) AND finite?_double(Dmul(sx, vx)) AND finite?_double(Dmul(sy, sy)) AND finite?_double(Dmul(sy, vy)) AND finite?_double(Ddiv(Dsub(Dmul(DTHR, DTHR), Dadd(Dmul(sx, sx), Dmul(sy, sy))), Dadd(Dmul(sx, vx), Dmul(sy, vy))))
AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vy) - r_vy)<=e_vy AND abs(DtoR(DTHR) - r_DTHR)<=e_DTHR
AND (((NOT((((r_sx * r_vx) + (r_sy * r_vy)) < 0)) AND TRUE) AND (NOT((Dadd(Dmul(sx, vx), Dmul(sy, vy)) < 0)) AND TRUE)) OR (((((r_sx * r_vx) + (r_sy * r_vy)) < 0) AND (((r_sx * r_vx) + (r_sy * r_vy)) /= 0)) AND ((Dadd(Dmul(sx, vx), Dmul(sy, vy)) < 0) AND (Dadd(Dmul(sx, vx), Dmul(sy, vy)) /= ItoD(0)))))
IMPLIES
abs(DtoR(taumod(sx, vx, sy, vy, DTHR)) - taumod_real(r_sx, r_vx, r_sy, r_vy, r_DTHR)) <= taumod_0_error(e_sx, e_vx, e_sy, e_vy, e_DTHR, r_sx, r_vx, r_sy, r_vy, r_DTHR)


%|- taumod_0: PROOF
%|- (precisa)
%|- QED


taumod_1_error (e_sx, e_vx, e_sy, e_vy, e_DTHR: nonneg_real, r_sx, r_vx, r_sy, r_vy, r_DTHR: real): nonneg_real = max(((0 / 1) + abs((-1 - div_safe(((r_DTHR * r_DTHR) - ((r_sx * r_sx) + (r_sy * r_sy))), ((r_sx * r_vx) + (r_sy * r_vy)))))), (aerr_ulp_dp_div(((r_DTHR * r_DTHR) - ((r_sx * r_sx) + (r_sy * r_sy))), aerr_ulp_dp_sub((r_DTHR * r_DTHR), aerr_ulp_dp_mul(r_DTHR, e_DTHR, r_DTHR, e_DTHR), ((r_sx * r_sx) + (r_sy * r_sy)), aerr_ulp_dp_add((r_sx * r_sx), aerr_ulp_dp_mul(r_sx, e_sx, r_sx, e_sx), (r_sy * r_sy), aerr_ulp_dp_mul(r_sy, e_sy, r_sy, e_sy))), ((r_sx * r_vx) + (r_sy * r_vy)), aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy))) + abs((div_safe(((r_DTHR * r_DTHR) - ((r_sx * r_sx) + (r_sy * r_sy))), ((r_sx * r_vx) + (r_sy * r_vy))) - -1))))


taumod_1 : LEMMA
FORALL(e_sx, e_vx, e_sy, e_vy, e_DTHR: nonneg_real, r_sx, r_vx, r_sy, r_vy, r_DTHR: real, sx: double, vx: double, sy: double, vy: double, DTHR: double):
int_in_range?_double(-1) AND finite?_double(DTHR) AND finite?_double(sx) AND finite?_double(sy) AND finite?_double(vx) AND finite?_double(vy) AND finite?_double(Dadd(Dmul(sx, sx), Dmul(sy, sy))) AND finite?_double(Dadd(Dmul(sx, vx), Dmul(sy, vy))) AND finite?_double(Dsub(Dmul(DTHR, DTHR), Dadd(Dmul(sx, sx), Dmul(sy, sy)))) AND finite?_double(Dmul(DTHR, DTHR)) AND finite?_double(Dmul(sx, sx)) AND finite?_double(Dmul(sx, vx)) AND finite?_double(Dmul(sy, sy)) AND finite?_double(Dmul(sy, vy)) AND finite?_double(Ddiv(Dsub(Dmul(DTHR, DTHR), Dadd(Dmul(sx, sx), Dmul(sy, sy))), Dadd(Dmul(sx, vx), Dmul(sy, vy))))
AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vy) - r_vy)<=e_vy AND abs(DtoR(DTHR) - r_DTHR)<=e_DTHR
AND (((NOT((((r_sx * r_vx) + (r_sy * r_vy)) < 0)) AND (((r_sx * r_vx) + (r_sy * r_vy)) /= 0)) AND ((Dadd(Dmul(sx, vx), Dmul(sy, vy)) < 0) AND (Dadd(Dmul(sx, vx), Dmul(sy, vy)) /= ItoD(0)))) OR (((((r_sx * r_vx) + (r_sy * r_vy)) < 0) AND (((r_sx * r_vx) + (r_sy * r_vy)) /= 0)) AND (NOT((Dadd(Dmul(sx, vx), Dmul(sy, vy)) < 0)) AND TRUE)))
IMPLIES
abs(DtoR(taumod(sx, vx, sy, vy, DTHR)) - taumod_real(r_sx, r_vx, r_sy, r_vy, r_DTHR)) <= taumod_1_error(e_sx, e_vx, e_sy, e_vy, e_DTHR, r_sx, r_vx, r_sy, r_vy, r_DTHR)


%|- taumod_1: PROOF
%|- (precisa)
%|- QED


taumod_error(e_sx, e_vx, e_sy, e_vy, e_DTHR: nonneg_real, r_sx, r_vx, r_sy, r_vy, r_DTHR: real): nonneg_real = max(taumod_0_error(e_sx, e_vx, e_sy, e_vy, e_DTHR: nonneg_real, r_sx, r_vx, r_sy, r_vy, r_DTHR: real), taumod_1_error(e_sx, e_vx, e_sy, e_vy, e_DTHR: nonneg_real, r_sx, r_vx, r_sy, r_vy, r_DTHR: real))

tcoa_0_error (e_sz, e_vz: nonneg_real, r_sz, r_vz: real): nonneg_real = max(aerr_ulp_dp_neg(div_safe(r_sz, r_vz), aerr_ulp_dp_div(r_sz, e_sz, r_vz, e_vz)), (0 / 1))


tcoa_0 : LEMMA
FORALL(e_sz, e_vz: nonneg_real, r_sz, r_vz: real, sz: double, vz: double):
int_in_range?_double(-1) AND finite?_double(sz) AND finite?_double(vz) AND finite?_double(Ddiv(sz, vz)) AND finite?_double(Dneg(Ddiv(sz, vz)))
AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(vz) - r_vz)<=e_vz
AND (((NOT(((r_sz * r_vz) < 0)) AND TRUE) AND (NOT((Dmul(sz, vz) < 0)) AND TRUE)) OR ((((r_sz * r_vz) < 0) AND (r_vz /= 0)) AND ((Dmul(sz, vz) < 0) AND (vz /= ItoD(0)))))
IMPLIES
abs(DtoR(tcoa(sz, vz)) - tcoa_real(r_sz, r_vz)) <= tcoa_0_error(e_sz, e_vz, r_sz, r_vz)


%|- tcoa_0: PROOF
%|- (precisa)
%|- QED


tcoa_1_error (e_sz, e_vz: nonneg_real, r_sz, r_vz: real): nonneg_real = max(((0 / 1) + abs((-1 - -(div_safe(r_sz, r_vz))))), (aerr_ulp_dp_neg(div_safe(r_sz, r_vz), aerr_ulp_dp_div(r_sz, e_sz, r_vz, e_vz)) + abs((-(div_safe(r_sz, r_vz)) - -1))))


tcoa_1 : LEMMA
FORALL(e_sz, e_vz: nonneg_real, r_sz, r_vz: real, sz: double, vz: double):
int_in_range?_double(-1) AND finite?_double(sz) AND finite?_double(vz) AND finite?_double(Ddiv(sz, vz)) AND finite?_double(Dneg(Ddiv(sz, vz)))
AND
abs(DtoR(sz) - r_sz)<=e_sz AND abs(DtoR(vz) - r_vz)<=e_vz
AND (((NOT(((r_sz * r_vz) < 0)) AND (r_vz /= 0)) AND ((Dmul(sz, vz) < 0) AND (vz /= ItoD(0)))) OR ((((r_sz * r_vz) < 0) AND (r_vz /= 0)) AND (NOT((Dmul(sz, vz) < 0)) AND TRUE)))
IMPLIES
abs(DtoR(tcoa(sz, vz)) - tcoa_real(r_sz, r_vz)) <= tcoa_1_error(e_sz, e_vz, r_sz, r_vz)


%|- tcoa_1: PROOF
%|- (precisa)
%|- QED


tcoa_error(e_sz, e_vz: nonneg_real, r_sz, r_vz: real): nonneg_real = max(tcoa_0_error(e_sz, e_vz: nonneg_real, r_sz, r_vz: real), tcoa_1_error(e_sz, e_vz: nonneg_real, r_sz, r_vz: real))

tcpa_0_error (e_sx, e_vx, e_sy, e_vy: nonneg_real, r_sx, r_vx, r_sy, r_vy: real): nonneg_real = max(aerr_ulp_dp_div(-(((r_sx * r_vx) + (r_sy * r_vy))), aerr_ulp_dp_neg(((r_sx * r_vx) + (r_sy * r_vy)), aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy))), ((r_vx * r_vx) + (r_vy * r_vy)), aerr_ulp_dp_add((r_vx * r_vx), aerr_ulp_dp_mul(r_vx, e_vx, r_vx, e_vx), (r_vy * r_vy), aerr_ulp_dp_mul(r_vy, e_vy, r_vy, e_vy))), (0 / 1))


tcpa_0 : LEMMA
FORALL(e_sx, e_vx, e_sy, e_vy: nonneg_real, r_sx, r_vx, r_sy, r_vy: real, sx: double, vx: double, sy: double, vy: double):
int_in_range?_double(0) AND finite?_double(sx) AND finite?_double(sy) AND finite?_double(vx) AND finite?_double(vy) AND finite?_double(Dadd(Dmul(sx, vx), Dmul(sy, vy))) AND finite?_double(Dadd(Dmul(vx, vx), Dmul(vy, vy))) AND finite?_double(Dmul(sx, vx)) AND finite?_double(Dmul(sy, vy)) AND finite?_double(Dmul(vx, vx)) AND finite?_double(Dmul(vy, vy)) AND finite?_double(Ddiv(Dneg(Dadd(Dmul(sx, vx), Dmul(sy, vy))), Dadd(Dmul(vx, vx), Dmul(vy, vy)))) AND finite?_double(Dneg(Dadd(Dmul(sx, vx), Dmul(sy, vy))))
AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vy) - r_vy)<=e_vy
AND (((NOT((((r_vx * r_vx) + (r_vy * r_vy)) /= 0)) AND TRUE) AND (NOT((Dadd(Dmul(vx, vx), Dmul(vy, vy)) /= 0)) AND TRUE)) OR (((((r_vx * r_vx) + (r_vy * r_vy)) /= 0) AND (((r_vx * r_vx) + (r_vy * r_vy)) /= 0)) AND ((Dadd(Dmul(vx, vx), Dmul(vy, vy)) /= 0) AND (Dadd(Dmul(vx, vx), Dmul(vy, vy)) /= ItoD(0)))))
IMPLIES
abs(DtoR(tcpa(sx, vx, sy, vy)) - tcpa_real(r_sx, r_vx, r_sy, r_vy)) <= tcpa_0_error(e_sx, e_vx, e_sy, e_vy, r_sx, r_vx, r_sy, r_vy)


%|- tcpa_0: PROOF
%|- (precisa)
%|- QED


tcpa_1_error (e_sx, e_vx, e_sy, e_vy: nonneg_real, r_sx, r_vx, r_sy, r_vy: real): nonneg_real = max(((0 / 1) + abs((0 - div_safe(-(((r_sx * r_vx) + (r_sy * r_vy))), ((r_vx * r_vx) + (r_vy * r_vy)))))), (aerr_ulp_dp_div(-(((r_sx * r_vx) + (r_sy * r_vy))), aerr_ulp_dp_neg(((r_sx * r_vx) + (r_sy * r_vy)), aerr_ulp_dp_add((r_sx * r_vx), aerr_ulp_dp_mul(r_sx, e_sx, r_vx, e_vx), (r_sy * r_vy), aerr_ulp_dp_mul(r_sy, e_sy, r_vy, e_vy))), ((r_vx * r_vx) + (r_vy * r_vy)), aerr_ulp_dp_add((r_vx * r_vx), aerr_ulp_dp_mul(r_vx, e_vx, r_vx, e_vx), (r_vy * r_vy), aerr_ulp_dp_mul(r_vy, e_vy, r_vy, e_vy))) + abs((div_safe(-(((r_sx * r_vx) + (r_sy * r_vy))), ((r_vx * r_vx) + (r_vy * r_vy))) - 0))))


tcpa_1 : LEMMA
FORALL(e_sx, e_vx, e_sy, e_vy: nonneg_real, r_sx, r_vx, r_sy, r_vy: real, sx: double, vx: double, sy: double, vy: double):
int_in_range?_double(0) AND finite?_double(sx) AND finite?_double(sy) AND finite?_double(vx) AND finite?_double(vy) AND finite?_double(Dadd(Dmul(sx, vx), Dmul(sy, vy))) AND finite?_double(Dadd(Dmul(vx, vx), Dmul(vy, vy))) AND finite?_double(Dmul(sx, vx)) AND finite?_double(Dmul(sy, vy)) AND finite?_double(Dmul(vx, vx)) AND finite?_double(Dmul(vy, vy)) AND finite?_double(Ddiv(Dneg(Dadd(Dmul(sx, vx), Dmul(sy, vy))), Dadd(Dmul(vx, vx), Dmul(vy, vy)))) AND finite?_double(Dneg(Dadd(Dmul(sx, vx), Dmul(sy, vy))))
AND
abs(DtoR(sx) - r_sx)<=e_sx AND abs(DtoR(vx) - r_vx)<=e_vx AND abs(DtoR(sy) - r_sy)<=e_sy AND abs(DtoR(vy) - r_vy)<=e_vy
AND (((NOT((((r_vx * r_vx) + (r_vy * r_vy)) /= 0)) AND (((r_vx * r_vx) + (r_vy * r_vy)) /= 0)) AND ((Dadd(Dmul(vx, vx), Dmul(vy, vy)) /= 0) AND (Dadd(Dmul(vx, vx), Dmul(vy, vy)) /= ItoD(0)))) OR (((((r_vx * r_vx) + (r_vy * r_vy)) /= 0) AND (((r_vx * r_vx) + (r_vy * r_vy)) /= 0)) AND (NOT((Dadd(Dmul(vx, vx), Dmul(vy, vy)) /= 0)) AND TRUE)))
IMPLIES
abs(DtoR(tcpa(sx, vx, sy, vy)) - tcpa_real(r_sx, r_vx, r_sy, r_vy)) <= tcpa_1_error(e_sx, e_vx, e_sy, e_vy, r_sx, r_vx, r_sy, r_vy)


%|- tcpa_1: PROOF
%|- (precisa)
%|- QED


tcpa_error(e_sx, e_vx, e_sy, e_vy: nonneg_real, r_sx, r_vx, r_sy, r_vy: real): nonneg_real = max(tcpa_0_error(e_sx, e_vx, e_sy, e_vy: nonneg_real, r_sx, r_vx, r_sy, r_vy: real), tcpa_1_error(e_sx, e_vx, e_sy, e_vy: nonneg_real, r_sx, r_vx, r_sy, r_vy: real))

END wcv_detection_taumod2_cert