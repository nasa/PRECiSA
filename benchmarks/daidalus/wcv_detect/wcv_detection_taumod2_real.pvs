% This file is automatically generated by PRECiSA 

wcv_detection_taumod2_real: THEORY
BEGIN
IMPORTING wcv_detection_taumod2

tcoa_real(r_sz: real, r_vz: real): real  =
IF ((r_sz * r_vz) < 0)
THEN -((r_sz / r_vz))
ELSE -1
ENDIF

tcpa_real(r_sx: real, r_vx: real, r_sy: real, r_vy: real): real  =
IF (((r_vx * r_vx) + (r_vy * r_vy)) /= 0)
THEN (-(((r_sx * r_vx) + (r_sy * r_vy))) / ((r_vx * r_vx) + (r_vy * r_vy)))
ELSE 0
ENDIF

taumod_real(r_sx: real, r_vx: real, r_sy: real, r_vy: real, r_DTHR: real): real  =
IF (((r_sx * r_vx) + (r_sy * r_vy)) < 0)
THEN (((r_DTHR * r_DTHR) - ((r_sx * r_sx) + (r_sy * r_sy))) / ((r_sx * r_vx) + (r_sy * r_vy)))
ELSE -1
ENDIF

horizontal_wcv_real(r_sx: real, r_sy: real, r_vx: real, r_vy: real, r_DTHR: real, r_TTHR: real): bool  =
LET tc:real=tcpa_real(r_sx, r_vx, r_sy, r_vy),
tm:real=taumod_real(r_sx, r_vx, r_sy, r_vy, r_DTHR)
IN (((((r_sx * r_sx) + (r_sy * r_sy)) - (r_DTHR * r_DTHR)) <= 0) OR (((((((r_sx + (r_tc * r_vx)) * (r_sx + (r_tc * r_vx))) + ((r_sy + (r_tc * r_vy)) * (r_sy + (r_tc * r_vy)))) - (r_DTHR * r_DTHR)) <= 0) AND (0 <= r_tm)) AND ((r_tm - r_TTHR) <= 0)))

vertical_WCV_real(r_sz: real, r_vz: real, r_ZTHR: real, r_TCOA: real): bool  =
(((abs(r_sz) - r_ZTHR) <= 0) OR ((0 <= tcoa_real(r_sz, r_vz)) AND ((tcoa_real(r_sz, r_vz) - r_TCOA) <= 0)))

WCV_real(r_sx: real, r_sy: real, r_sz: real, r_vx: real, r_vy: real, r_vz: real, r_DTHR: real, r_TTHR: real, r_ZTHR: real, r_TCOA: real): bool  =
(horizontal_wcv(r_sx, r_sy, r_vx, r_vy, r_DTHR, r_TTHR) AND vertical_WCV(r_sz, r_vz, r_ZTHR, r_TCOA))

sign_real(r_x: real): int  =
IF (r_x >= 0)
THEN 1
ELSE -1
ENDIF

max__real(r_a: real, r_b: real): real  =
IF ((r_a - r_b) < 0)
THEN r_b
ELSE r_a
ENDIF

min__real(r_a: real, r_b: real): real  =
IF ((r_a - r_b) > 0)
THEN r_b
ELSE r_a
ENDIF

discr_real(r_a: real, r_b: real, r_c: real): real  =
((r_b * r_b) - ((4 * r_a) * r_c))

root_pos_real(r_a: real, r_b: real, r_c: real): real  =
IF ((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0))
THEN ((-(r_b) + sqrt(abs(((r_b * r_b) - ((4 * r_a) * r_c))))) / (2 * r_a))
ELSE 0
ENDIF

root_neg_real(r_a: real, r_b: real, r_c: real): real  =
IF ((((r_b * r_b) - ((4 * r_a) * r_c)) >= 0) AND (r_a /= 0))
THEN ((-(r_b) - sqrt(abs(((r_b * r_b) - ((4 * r_a) * r_c))))) / (2 * r_a))
ELSE 0
ENDIF

inner_product_real(r_sx: real, r_sy: real, r_vx: real, r_vy: real): real  =
((r_sx * r_vx) + (r_sy * r_vy))

cross_product_real(r_sx: real, r_sy: real, r_vx: real, r_vy: real): real  =
((r_sx * r_vy) - (r_sy * r_vx))

sq_real(r_sx: real, r_sy: real): real  =
inner_product_real(r_sx, r_sy, r_sx, r_sy)

proj_real(r_sx: real, r_vx: real, r_t: real): real  =
(r_sx + (r_vx * r_t))

Delta_real(r_sx: real, r_sy: real, r_vx: real, r_vy: real, r_D: real): real  =
(((r_D * r_D) * sq_real(r_vx, r_vy)) - (cross_product_real(r_sx, r_sy, r_vx, r_vy) * cross_product_real(r_sx, r_sy, r_vx, r_vy)))

Theta_D_pos_real(r_D: real, r_sx: real, r_sy: real, r_vx: real, r_vy: real): real  =
root_pos_real(sq_real(r_vx, r_vy), (2 * inner_product_real(r_sx, r_sy, r_vx, r_vy)), (sq_real(r_sx, r_sy) - (r_D * r_D)))

Theta_D_neg_real(r_D: real, r_sx: real, r_sy: real, r_vx: real, r_vy: real): real  =
root_neg_real(sq_real(r_vx, r_vy), (2 * inner_product_real(r_sx, r_sy, r_vx, r_vy)), (sq_real(r_sx, r_sy) - (r_D * r_D)))

Theta_H_pos_real(r_sz: real, r_nzvz: real, r_H: real): real  =
(((sign_real(r_nzvz) * r_H) - r_sz) / r_nzvz)

Theta_H_neg_real(r_sz: real, r_nzvz: real, r_H: real): real  =
(((-(sign_real(r_nzvz)) * r_H) - r_sz) / r_nzvz)

horizontal_WCV_taumod_interval_real(r_T: real, r_sx: real, r_sy: real, r_vx: real, r_vy: real, r_TAUMOD: real, r_DTHR: real): bool  =
LET a:real=sq_real(r_vx, r_vy),
b:real=((2 * inner_product_real(r_sx, r_sy, r_vx, r_vy)) + (r_TAUMOD * sq_real(r_vx, r_vy))),
c:real=((sq_real(r_sx, r_sy) + (r_TAUMOD * inner_product_real(r_sx, r_sy, r_vx, r_vy))) - (r_DTHR * r_DTHR)),
theta_d_pos:real=Theta_D_pos_real(r_DTHR, r_sx, r_sy, r_vx, r_vy)
IN LET root_neg_var:real=root_neg_real(r_a, r_b, r_c)
IN IF ((r_a /= 0) AND ((sq_real(r_sx, r_sy) - (r_DTHR * r_DTHR)) <= 0))
THEN (0 <= min__real(r_T, r_theta_d_pos))
ELSIF ((sq_real(r_sx, r_sy) - (r_DTHR * r_DTHR)) <= 0)
THEN TRUE
ELSIF ((inner_product_real(r_sx, r_sy, r_vx, r_vy) >= 0) OR (discr_real(r_a, r_b, r_c) < 0))
THEN FALSE
ELSIF ((Delta_real(r_sx, r_sy, r_vx, r_vy, r_DTHR) >= 0) AND ((r_root_neg_var - r_T) <= 0))
THEN ((max__real(0, r_root_neg_var) - min__real(r_T, r_theta_d_pos)) <= 0)
ELSE FALSE
ENDIF

coalt_entry_real(r_sz: real, r_nzvz: real, r_TCOA: real, r_ZTHR: real): real  =
IF ((r_ZTHR - (abs(r_nzvz) * r_TCOA)) <= 0)
THEN Theta_H_neg_real(r_sz, r_nzvz, (abs(r_nzvz) * r_TCOA))
ELSE Theta_H_neg_real(r_sz, r_nzvz, r_ZTHR)
ENDIF

coalt_exit_real(r_sz: real, r_nzvz: real, r_ZTHR: real): real  =
Theta_H_pos_real(r_sz, r_nzvz, r_ZTHR)

END wcv_detection_taumod2_real