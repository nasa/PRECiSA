% This file is automatically generated by PRECiSA 

himmilbeau_cert: THEORY
BEGIN
IMPORTING PRECiSA@strategies
IMPORTING float_bounded_axiomatic@aerr_ulp__double
IMPORTING float_bounded_axiomatic@aerr_ulp__single
IMPORTING himmilbeau
IMPORTING himmilbeau_real

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

himmilbeau_0_error (e_X1, e_X2: nonneg_real, r_X1, r_X2: real): nonneg_real = aerr_ulp_dp_add(((((r_X1 * r_X1) + r_X2) - 11) * (((r_X1 * r_X1) + r_X2) - 11)), aerr_ulp_dp_mul((((r_X1 * r_X1) + r_X2) - 11), aerr_ulp_dp_sub(((r_X1 * r_X1) + r_X2), aerr_ulp_dp_add((r_X1 * r_X1), aerr_ulp_dp_mul(r_X1, e_X1, r_X1, e_X1), r_X2, e_X2), 11, (0 / 1)), (((r_X1 * r_X1) + r_X2) - 11), aerr_ulp_dp_sub(((r_X1 * r_X1) + r_X2), aerr_ulp_dp_add((r_X1 * r_X1), aerr_ulp_dp_mul(r_X1, e_X1, r_X1, e_X1), r_X2, e_X2), 11, (0 / 1))), (((r_X1 + (r_X2 * r_X2)) - 7) * ((r_X1 + (r_X2 * r_X2)) - 7)), aerr_ulp_dp_mul(((r_X1 + (r_X2 * r_X2)) - 7), aerr_ulp_dp_sub((r_X1 + (r_X2 * r_X2)), aerr_ulp_dp_add(r_X1, e_X1, (r_X2 * r_X2), aerr_ulp_dp_mul(r_X2, e_X2, r_X2, e_X2)), 7, (0 / 1)), ((r_X1 + (r_X2 * r_X2)) - 7), aerr_ulp_dp_sub((r_X1 + (r_X2 * r_X2)), aerr_ulp_dp_add(r_X1, e_X1, (r_X2 * r_X2), aerr_ulp_dp_mul(r_X2, e_X2, r_X2, e_X2)), 7, (0 / 1))))


himmilbeau_0 : LEMMA
FORALL(e_X1, e_X2: nonneg_real, r_X1, r_X2: real, X1: double, X2: double):
int_in_range?_double(7) AND int_in_range?_double(11) AND finite?_double(X1) AND finite?_double(X2) AND finite?_double(Dadd(X1, Dmul(X2, X2))) AND finite?_double(Dadd(Dmul(X1, X1), X2)) AND finite?_double(Dadd(Dmul(Dsub(Dadd(Dmul(X1, X1), X2), 11), Dsub(Dadd(Dmul(X1, X1), X2), 11)), Dmul(Dsub(Dadd(X1, Dmul(X2, X2)), 7), Dsub(Dadd(X1, Dmul(X2, X2)), 7)))) AND finite?_double(Dsub(Dadd(X1, Dmul(X2, X2)), 7)) AND finite?_double(Dsub(Dadd(Dmul(X1, X1), X2), 11)) AND finite?_double(Dmul(X1, X1)) AND finite?_double(Dmul(X2, X2)) AND finite?_double(Dmul(Dsub(Dadd(X1, Dmul(X2, X2)), 7), Dsub(Dadd(X1, Dmul(X2, X2)), 7))) AND finite?_double(Dmul(Dsub(Dadd(Dmul(X1, X1), X2), 11), Dsub(Dadd(Dmul(X1, X1), X2), 11)))
AND
abs(DtoR(X1) - r_X1)<=e_X1 AND abs(DtoR(X2) - r_X2)<=e_X2
IMPLIES
abs(DtoR(himmilbeau(X1, X2)) - himmilbeau_real(r_X1, r_X2)) <= himmilbeau_0_error(e_X1, e_X2, r_X1, r_X2)


%|- himmilbeau_0: PROOF
%|- (precisa)
%|- QED


himmilbeau_error(e_X1, e_X2: nonneg_real, r_X1, r_X2: real): nonneg_real = himmilbeau_0_error(e_X1, e_X2, r_X1, r_X2)

END himmilbeau_cert