% This file is automatically generated by PRECiSA 

rigidBody2_cert: THEORY
BEGIN
IMPORTING PRECiSA@strategies
IMPORTING float_bounded_axiomatic@aerr_ulp__double
IMPORTING float_bounded_axiomatic@aerr_ulp__single
IMPORTING rigidBody2
IMPORTING rigidBody2_real

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

rigidBody2_0_error (e_X1, e_X2, e_X3: nonneg_real, r_X1, r_X2, r_X3: real): nonneg_real = aerr_ulp_dp_sub(((((((2 * r_X1) * r_X2) * r_X3) + ((3 * r_X3) * r_X3)) - (((r_X2 * r_X1) * r_X2) * r_X3)) - ((3 * r_X3) * r_X3)), aerr_ulp_dp_sub((((((2 * r_X1) * r_X2) * r_X3) + ((3 * r_X3) * r_X3)) - (((r_X2 * r_X1) * r_X2) * r_X3)), aerr_ulp_dp_sub(((((2 * r_X1) * r_X2) * r_X3) + ((3 * r_X3) * r_X3)), aerr_ulp_dp_add((((2 * r_X1) * r_X2) * r_X3), aerr_ulp_dp_mul(((2 * r_X1) * r_X2), aerr_ulp_dp_mul((2 * r_X1), aerr_ulp_dp_mul_p2l((1:: nat), e_X1), r_X2, e_X2), r_X3, e_X3), ((3 * r_X3) * r_X3), aerr_ulp_dp_mul((3 * r_X3), aerr_ulp_dp_mul(3, (0 / 1), r_X3, e_X3), r_X3, e_X3)), (((r_X2 * r_X1) * r_X2) * r_X3), aerr_ulp_dp_mul(((r_X2 * r_X1) * r_X2), aerr_ulp_dp_mul((r_X2 * r_X1), aerr_ulp_dp_mul(r_X2, e_X2, r_X1, e_X1), r_X2, e_X2), r_X3, e_X3)), ((3 * r_X3) * r_X3), aerr_ulp_dp_mul((3 * r_X3), aerr_ulp_dp_mul(3, (0 / 1), r_X3, e_X3), r_X3, e_X3)), r_X2, e_X2)


rigidBody2_0 : LEMMA
FORALL(e_X1, e_X2, e_X3: nonneg_real, r_X1, r_X2, r_X3: real, X1: double, X2: double, X3: double):
int_in_range?_double(2) AND int_in_range?_double(3) AND finite?_double(X1) AND finite?_double(X2) AND finite?_double(X3) AND finite?_double(Dadd(Dmul(Dmul(Dmul(2, X1), X2), X3), Dmul(Dmul(3, X3), X3))) AND finite?_double(Dsub(Dadd(Dmul(Dmul(Dmul(2, X1), X2), X3), Dmul(Dmul(3, X3), X3)), Dmul(Dmul(Dmul(X2, X1), X2), X3))) AND finite?_double(Dsub(Dsub(Dadd(Dmul(Dmul(Dmul(2, X1), X2), X3), Dmul(Dmul(3, X3), X3)), Dmul(Dmul(Dmul(X2, X1), X2), X3)), Dmul(Dmul(3, X3), X3))) AND finite?_double(Dsub(Dsub(Dsub(Dadd(Dmul(Dmul(Dmul(2, X1), X2), X3), Dmul(Dmul(3, X3), X3)), Dmul(Dmul(Dmul(X2, X1), X2), X3)), Dmul(Dmul(3, X3), X3)), X2)) AND finite?_double(Dmul(2, X1)) AND finite?_double(Dmul(3, X3)) AND finite?_double(Dmul(X2, X1)) AND finite?_double(Dmul(Dmul(2, X1), X2)) AND finite?_double(Dmul(Dmul(3, X3), X3)) AND finite?_double(Dmul(Dmul(X2, X1), X2)) AND finite?_double(Dmul(Dmul(Dmul(2, X1), X2), X3)) AND finite?_double(Dmul(Dmul(Dmul(X2, X1), X2), X3))
AND
abs(DtoR(X1) - r_X1)<=e_X1 AND abs(DtoR(X2) - r_X2)<=e_X2 AND abs(DtoR(X3) - r_X3)<=e_X3
AND (((TRUE AND (1 < (ieee754_double_precision - Fexp(X1)))) AND (TRUE AND TRUE)))
IMPLIES
abs(DtoR(rigidBody2(X1, X2, X3)) - rigidBody2_real(r_X1, r_X2, r_X3)) <= rigidBody2_0_error(e_X1, e_X2, e_X3, r_X1, r_X2, r_X3)


%|- rigidBody2_0: PROOF
%|- (precisa)
%|- QED


rigidBody2_error(e_X1, e_X2, e_X3: nonneg_real, r_X1, r_X2, r_X3: real): nonneg_real = rigidBody2_0_error(e_X1, e_X2, e_X3, r_X1, r_X2, r_X3)

END rigidBody2_cert