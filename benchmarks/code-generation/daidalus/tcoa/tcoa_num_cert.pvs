% This file is automatically generated by PRECiSA 

% maxDepth: 7 , prec: 10^-14

tcoa_num_cert: THEORY
BEGIN
IMPORTING cert_tcoa, PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@strategies 

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Results: 0, neg_double(div_double(sz, vz))
% Real Results: -((r_sz / r_vz)), 0
% Control Flow:  Stable
tcoa_fp_c_0 : LEMMA
FORALL(r_sz, r_vz: real, sz: double, vz: double):
abs(safe_prjct_double(sz) - r_sz)<=ulp_dp(r_sz)/2 AND abs(safe_prjct_double(vz) - r_vz)<=ulp_dp(r_vz)/2
AND ((((r_vz /= 0) AND ((r_sz * r_vz) < 0)) AND ((vz /= integerToDouble(0)) AND (mul_double(sz, vz) < integerToDouble(0)))) OR (NOT(((r_sz * r_vz) < 0)) AND NOT((mul_double(sz, vz) < integerToDouble(0)))))
AND r_sz ## [|1,1000|] AND  r_vz ## [|1,1000|] AND
finite_double?(tcoa_fp(sz, vz)) AND finite_double?(sz) AND finite_double?(vz) AND finite_double?(mul_double(sz, vz)) AND finite_double?(integerToDouble(0))
IMPLIES
abs(safe_prjct_double(tcoa_fp(sz, vz)) - tcoa(r_sz, r_vz))<=6876345720111303 / 2475880078570760549798248448

%|- tcoa_fp_c_0 : PROOF
%|- (prove-concrete-lemma tcoa_fp_0 14 7)
%|- QED

tcoa_fp_err_0 : LEMMA
FORALL(r_sz, r_vz: real, sz: double, vz: double):
abs(safe_prjct_double(sz) - r_sz)<=ulp_dp(r_sz)/2 AND abs(safe_prjct_double(vz) - r_vz)<=ulp_dp(r_vz)/2
AND ((((r_vz /= 0) AND ((r_sz * r_vz) < 0)) AND ((vz /= integerToDouble(0)) AND (mul_double(sz, vz) < integerToDouble(0)))) OR (NOT(((r_sz * r_vz) < 0)) AND NOT((mul_double(sz, vz) < integerToDouble(0)))))
AND r_sz ## [|1,1000|] AND  r_vz ## [|1,1000|] AND
finite_double?(tcoa_fp(sz, vz)) AND finite_double?(sz) AND finite_double?(vz) AND finite_double?(mul_double(sz, vz)) AND finite_double?(integerToDouble(0))
IMPLIES
max(aebounddp_neg((r_sz / r_vz), aebounddp_div(r_sz, ulp_dp(r_sz)/2, r_vz, ulp_dp(r_vz)/2)), (0 / 1))<=6876345720111303 / 2475880078570760549798248448

END tcoa_num_cert