% This file is automatically generated by PRECiSA 

near_edge_fp: THEORY
BEGIN

IMPORTING float@top_ieee754dp

sign_fp(x: unb_double): int  = IF (x >= ItoD(0))
                               THEN 1
                               ELSE -1
                               ENDIF
quadratic_fp(a: unb_double, b: unb_double, c: unb_double, x: unb_double): unb_double  = Dadd(Dadd(Dmul(Dmul(a, x), x), Dmul(b, x)), c)
quad_min_le_D_int_fp(ap: unb_double, b: unb_double, c: unb_double, xl: unb_double, xu: unb_double, D: unb_double): bool  = (((Dsub(xl, xu) <= ItoD(0)) OR (((Dadd(Dmul(Dmul(ItoD(2), ap), xl), b) <= ItoD(0)) AND (ItoD(0) <= Dadd(Dmul(Dmul(ItoD(2), ap), xu), b))) AND (Dsub(Dmul(b, b), Dmul(Dmul(ItoD(4), ap), Dsub(c, D))) > ItoD(0)))) OR ((quadratic_fp(ap, b, Dsub(c, D), xl) < ItoD(0)) OR (quadratic_fp(ap, b, Dsub(c, D), xu) < ItoD(0))))
near_edge_fp(segstart_x: unb_double, segstart_y: unb_double, segend_x: unb_double, segend_y: unb_double, s_x: unb_double, s_y: unb_double): bool  = IF (((Dabs(Dsub(s_x, segstart_x)) > ItoD(0)) AND (Dabs(Dsub(s_x, segend_x)) > ItoD(0))) AND (sign_fp(Dsub(s_x, segend_x)) = sign_fp(Dsub(s_x, segstart_x))))
                                                                                                                                                    THEN FALSE
                                                                                                                                                    ELSIF (((Dabs(Dsub(s_y, segstart_y)) > ItoD(0)) AND (Dabs(Dsub(s_y, segend_y)) > ItoD(0))) AND (sign_fp(Dsub(s_y, segend_y)) = sign_fp(Dsub(s_y, segstart_y))))
                                                                                                                                                    THEN FALSE
                                                                                                                                                    ELSE LET length_x:unb_double=Dsub(segend_x, segstart_x)
                                                                                                                                                         IN LET length_y:unb_double=Dsub(segend_y, segstart_y)
                                                                                                                                                            IN LET ap:unb_double=Dadd(Dmul(length_x, length_x), Dmul(length_y, length_y))
                                                                                                                                                               IN LET diffstart_x:unb_double=Dsub(segstart_x, s_x)
                                                                                                                                                                  IN LET diffstart_y:unb_double=Dsub(segstart_y, s_y)
                                                                                                                                                                     IN LET diffend_x:unb_double=Dsub(segend_x, s_x)
                                                                                                                                                                        IN LET diffend_y:unb_double=Dsub(segend_y, s_y)
                                                                                                                                                                           IN LET b:unb_double=Dmul(ItoD(2), Dadd(Dmul(diffstart_x, length_x), Dmul(diffstart_y, length_y)))
                                                                                                                                                                              IN LET c:unb_double=Dadd(Dmul(diffstart_x, diffstart_x), Dmul(diffstart_y, diffstart_y))
                                                                                                                                                                                 IN (((Dadd(Dmul(diffstart_x, diffstart_x), Dmul(diffstart_y, diffstart_y)) < ItoD(0)) OR (Dadd(Dmul(diffend_x, diffend_x), Dmul(diffend_y, diffend_y)) < ItoD(0))) OR ((ap > ItoD(0)) AND quad_min_le_D_int(ap, b, c, 0, 1, 0)))
                                                                                                                                                    ENDIF

END near_edge_fp