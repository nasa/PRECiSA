% This file is automatically generated by PRECiSA 

% 2020-05-28 17:02:05.13592 UTC
% maxDepth: 7 , prec: 10^-14

winding_number_num_cert: THEORY
BEGIN
IMPORTING cert_winding_number, PRECiSA@bbiasp, PRECiSA@bbiadp, PRECiSA@strategies 

%|- *_TCC* : PROOF
%|- (precisa-gen-cert-tcc)
%|- QED

% Floating-Point Results: 1, 2, 3, 4
% Real Results: 1, 2, 3, 4
% Control Flow:  Stable
quadrant_fp_c_0 : LEMMA
FORALL(r_X, r_Y: real, X: unb_double, Y: unb_double):
abs(DtoR(X) - r_X)<=ulp_dp(r_X)/2 AND abs(DtoR(Y) - r_Y)<=ulp_dp(r_Y)/2
AND (((((r_X <= 0) AND (0 <= r_Y)) AND NOT(((0 <= r_X) AND (0 <= r_Y)))) AND (((X <= ItoD(0)) AND (ItoD(0) <= Y)) AND NOT(((ItoD(0) <= X) AND (ItoD(0) <= Y))))) OR ((NOT((r_X <= 0)) AND (NOT(((r_X <= 0) AND (0 <= r_Y))) AND NOT(((0 <= r_X) AND (0 <= r_Y))))) AND (NOT((X <= ItoD(0))) AND (NOT(((X <= ItoD(0)) AND (ItoD(0) <= Y))) AND NOT(((ItoD(0) <= X) AND (ItoD(0) <= Y)))))) OR (((0 <= r_X) AND (0 <= r_Y)) AND ((ItoD(0) <= X) AND (ItoD(0) <= Y))) OR (((r_X <= 0) AND (NOT(((r_X <= 0) AND (0 <= r_Y))) AND NOT(((0 <= r_X) AND (0 <= r_Y))))) AND ((X <= ItoD(0)) AND (NOT(((X <= ItoD(0)) AND (ItoD(0) <= Y))) AND NOT(((ItoD(0) <= X) AND (ItoD(0) <= Y)))))))
AND r_X ## [|-60000,60000|] AND  r_Y ## [|-10000,10000|]
IMPLIES
abs(quadrant_fp(X, Y) - quadrant(r_X, r_Y))<=0 / 1

%|- quadrant_fp_c_0 : PROOF
%|- (prove-concrete-lemma quadrant_fp_0 14 7)
%|- QED

quadrant_fp_err_0 : LEMMA
FORALL(r_X, r_Y: real, X: unb_double, Y: unb_double):
abs(DtoR(X) - r_X)<=ulp_dp(r_X)/2 AND abs(DtoR(Y) - r_Y)<=ulp_dp(r_Y)/2
AND (((((r_X <= 0) AND (0 <= r_Y)) AND NOT(((0 <= r_X) AND (0 <= r_Y)))) AND (((X <= ItoD(0)) AND (ItoD(0) <= Y)) AND NOT(((ItoD(0) <= X) AND (ItoD(0) <= Y))))) OR ((NOT((r_X <= 0)) AND (NOT(((r_X <= 0) AND (0 <= r_Y))) AND NOT(((0 <= r_X) AND (0 <= r_Y))))) AND (NOT((X <= ItoD(0))) AND (NOT(((X <= ItoD(0)) AND (ItoD(0) <= Y))) AND NOT(((ItoD(0) <= X) AND (ItoD(0) <= Y)))))) OR (((0 <= r_X) AND (0 <= r_Y)) AND ((ItoD(0) <= X) AND (ItoD(0) <= Y))) OR (((r_X <= 0) AND (NOT(((r_X <= 0) AND (0 <= r_Y))) AND NOT(((0 <= r_X) AND (0 <= r_Y))))) AND ((X <= ItoD(0)) AND (NOT(((X <= ItoD(0)) AND (ItoD(0) <= Y))) AND NOT(((ItoD(0) <= X) AND (ItoD(0) <= Y)))))))
AND r_X ## [|-60000,60000|] AND  r_Y ## [|-10000,10000|]
IMPLIES
max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1))<=0 / 1

% Floating-Point Results: -2, -1, 0, 1, 2
% Real Results: -2, -1, 0, 1, 2
% Control Flow:  Stable
winding_number_contrib_fp_c_0 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: unb_double, P_V1_y: unb_double, P_V2_x: unb_double, P_V2_y: unb_double, S_x: unb_double, S_y: unb_double):
abs(DtoR(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(DtoR(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(DtoR(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(DtoR(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(DtoR(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(DtoR(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND (((NOT((((((r_P_V2_x - r_S_x) - (r_P_V1_x - r_S_x)) * (r_P_V1_y - r_S_y)) - (((r_P_V2_y - r_S_y) - (r_P_V1_y - r_S_y)) * (r_P_V1_x - r_S_x))) <= 0)) AND (NOT(((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) - 1) = mod(quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)), 4))) AND (NOT(((quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)) - 1) = mod(quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)), 4))) AND NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))))))) AND (NOT((Dsub(Dmul(Dsub(Dsub(P_V2_x, S_x), Dsub(P_V1_x, S_x)), Dsub(P_V1_y, S_y)), Dmul(Dsub(Dsub(P_V2_y, S_y), Dsub(P_V1_y, S_y)), Dsub(P_V1_x, S_x))) <= ItoD(0))) AND (NOT((Isub(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 1) = Imod(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 4))) AND (NOT((Isub(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 1) = Imod(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 4))) AND NOT((quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)) = quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)))))))) OR ((((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) - 1) = mod(quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)), 4)) AND (NOT(((quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)) - 1) = mod(quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)), 4))) AND NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))))) AND ((Isub(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 1) = Imod(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 4)) AND (NOT((Isub(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 1) = Imod(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 4))) AND NOT((quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)) = quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y))))))) OR ((((quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)) - 1) = mod(quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)), 4)) AND NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))))) AND ((Isub(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 1) = Imod(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 4)) AND NOT((quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)) = quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)))))) OR (((((((r_P_V2_x - r_S_x) - (r_P_V1_x - r_S_x)) * (r_P_V1_y - r_S_y)) - (((r_P_V2_y - r_S_y) - (r_P_V1_y - r_S_y)) * (r_P_V1_x - r_S_x))) <= 0) AND (NOT(((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) - 1) = mod(quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)), 4))) AND (NOT(((quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)) - 1) = mod(quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)), 4))) AND NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))))))) AND ((Dsub(Dmul(Dsub(Dsub(P_V2_x, S_x), Dsub(P_V1_x, S_x)), Dsub(P_V1_y, S_y)), Dmul(Dsub(Dsub(P_V2_y, S_y), Dsub(P_V1_y, S_y)), Dsub(P_V1_x, S_x))) <= ItoD(0)) AND (NOT((Isub(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 1) = Imod(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 4))) AND (NOT((Isub(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 1) = Imod(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 4))) AND NOT((quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)) = quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)))))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)) = quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
abs(winding_number_contrib_fp(P_V1_x, P_V1_y, P_V2_x, P_V2_y, S_x, S_y) - winding_number_contrib(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y))<=0 / 1

%|- winding_number_contrib_fp_c_0 : PROOF
%|- (prove-concrete-lemma winding_number_contrib_fp_0 14 7)
%|- QED

winding_number_contrib_fp_err_0 : LEMMA
FORALL(r_P_V1_x, r_P_V1_y, r_P_V2_x, r_P_V2_y, r_S_x, r_S_y: real, P_V1_x: unb_double, P_V1_y: unb_double, P_V2_x: unb_double, P_V2_y: unb_double, S_x: unb_double, S_y: unb_double):
abs(DtoR(P_V1_x) - r_P_V1_x)<=ulp_dp(r_P_V1_x)/2 AND abs(DtoR(P_V1_y) - r_P_V1_y)<=ulp_dp(r_P_V1_y)/2 AND abs(DtoR(P_V2_x) - r_P_V2_x)<=ulp_dp(r_P_V2_x)/2 AND abs(DtoR(P_V2_y) - r_P_V2_y)<=ulp_dp(r_P_V2_y)/2 AND abs(DtoR(S_x) - r_S_x)<=ulp_dp(r_S_x)/2 AND abs(DtoR(S_y) - r_S_y)<=ulp_dp(r_S_y)/2
AND (((NOT((((((r_P_V2_x - r_S_x) - (r_P_V1_x - r_S_x)) * (r_P_V1_y - r_S_y)) - (((r_P_V2_y - r_S_y) - (r_P_V1_y - r_S_y)) * (r_P_V1_x - r_S_x))) <= 0)) AND (NOT(((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) - 1) = mod(quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)), 4))) AND (NOT(((quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)) - 1) = mod(quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)), 4))) AND NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))))))) AND (NOT((Dsub(Dmul(Dsub(Dsub(P_V2_x, S_x), Dsub(P_V1_x, S_x)), Dsub(P_V1_y, S_y)), Dmul(Dsub(Dsub(P_V2_y, S_y), Dsub(P_V1_y, S_y)), Dsub(P_V1_x, S_x))) <= ItoD(0))) AND (NOT((Isub(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 1) = Imod(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 4))) AND (NOT((Isub(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 1) = Imod(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 4))) AND NOT((quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)) = quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)))))))) OR ((((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) - 1) = mod(quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)), 4)) AND (NOT(((quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)) - 1) = mod(quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)), 4))) AND NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)))))) AND ((Isub(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 1) = Imod(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 4)) AND (NOT((Isub(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 1) = Imod(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 4))) AND NOT((quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)) = quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y))))))) OR ((((quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)) - 1) = mod(quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)), 4)) AND NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))))) AND ((Isub(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 1) = Imod(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 4)) AND NOT((quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)) = quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)))))) OR (((((((r_P_V2_x - r_S_x) - (r_P_V1_x - r_S_x)) * (r_P_V1_y - r_S_y)) - (((r_P_V2_y - r_S_y) - (r_P_V1_y - r_S_y)) * (r_P_V1_x - r_S_x))) <= 0) AND (NOT(((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) - 1) = mod(quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)), 4))) AND (NOT(((quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y)) - 1) = mod(quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)), 4))) AND NOT((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))))))) AND ((Dsub(Dmul(Dsub(Dsub(P_V2_x, S_x), Dsub(P_V1_x, S_x)), Dsub(P_V1_y, S_y)), Dmul(Dsub(Dsub(P_V2_y, S_y), Dsub(P_V1_y, S_y)), Dsub(P_V1_x, S_x))) <= ItoD(0)) AND (NOT((Isub(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 1) = Imod(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 4))) AND (NOT((Isub(quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)), 1) = Imod(quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)), 4))) AND NOT((quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)) = quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)))))))) OR ((quadrant((r_P_V1_x - r_S_x), (r_P_V1_y - r_S_y)) = quadrant((r_P_V2_x - r_S_x), (r_P_V2_y - r_S_y))) AND (quadrant(Dsub(P_V1_x, S_x), Dsub(P_V1_y, S_y)) = quadrant(Dsub(P_V2_x, S_x), Dsub(P_V2_y, S_y)))))
AND r_P_V1_x ## [|-60000,60000|] AND  r_P_V1_y ## [|-60000,60000|] AND  r_P_V2_x ## [|-60000,60000|] AND  r_P_V2_y ## [|-60000,60000|] AND  r_S_x ## [|-60000,60000|] AND  r_S_y ## [|-60000,60000|]
IMPLIES
max(max(max(max((0 / 1), (0 / 1)), (0 / 1)), (0 / 1)), (0 / 1))<=0 / 1

% Floating-Point Results: for[int](0,2,0,LAMBDA (I:subrange(0,2,Acc:int): (IF (I < 2)
                                                                           THEN Iadd(Acc, winding_number_contrib(Px[I], Py[I], Px[Iadd(I, 1)], Py[Iadd(I, 1)], Sx, Sy))
                                                                           ELSE Iadd(Acc, winding_number_contrib(Px[I], Py[I], Px[0], Py[0], Sx, Sy))
                                                                           ENDIF))
% Real Results: for[int](0,2,0,LAMBDA (r_I:subrange(0,2,r_Acc:int): (IF (r_I < 2)
                                                                     THEN (r_Acc + winding_number_contrib(Px[r_I], Py[r_I], Px[(r_I + 1)], Py[(r_I + 1)], r_Sx, r_Sy))
                                                                     ELSE (r_Acc + winding_number_contrib(Px[r_I], Py[r_I], Px[0], Py[0], r_Sx, r_Sy))
                                                                     ENDIF))
% Control Flow:  Stable
winding_number_fp_c_0 : LEMMA
FORALL(r_N, r_Px, r_Py, r_Sx, r_Sy: real, N: int, Px: ARRAY [int -> unb_double], Py: ARRAY [int -> unb_double], Sx: unb_double, Sy: unb_double):
abs(N - r_N)<= 0 AND abs(DtoR(Px) - r_Px)<=ulp_dp(r_Px)/2 AND abs(DtoR(Py) - r_Py)<=ulp_dp(r_Py)/2 AND abs(DtoR(Sx) - r_Sx)<=ulp_dp(r_Sx)/2 AND abs(DtoR(Sy) - r_Sy)<=ulp_dp(r_Sy)/2
AND ((TRUE AND TRUE))
AND r_N ## [|1,6|] AND  r_Px ## [|-60000,60000|] AND  r_Py ## [|-60000,60000|] AND  r_Sx ## [|-60000,60000|] AND  r_Sy ## [|-60000,60000|]
IMPLIES
abs(winding_number_fp(N, Px, Py, Sx, Sy) - winding_number(r_N, r_Px, r_Py, r_Sx, r_Sy))<=0 / 1

%|- winding_number_fp_c_0 : PROOF
%|- (prove-concrete-lemma winding_number_fp_0 14 7)
%|- QED

winding_number_fp_err_0 : LEMMA
FORALL(r_N, r_Px, r_Py, r_Sx, r_Sy: real, N: int, Px: ARRAY [int -> unb_double], Py: ARRAY [int -> unb_double], Sx: unb_double, Sy: unb_double):
abs(N - r_N)<= 0 AND abs(DtoR(Px) - r_Px)<=ulp_dp(r_Px)/2 AND abs(DtoR(Py) - r_Py)<=ulp_dp(r_Py)/2 AND abs(DtoR(Sx) - r_Sx)<=ulp_dp(r_Sx)/2 AND abs(DtoR(Sy) - r_Sy)<=ulp_dp(r_Sy)/2
AND ((TRUE AND TRUE))
AND r_N ## [|1,6|] AND  r_Px ## [|-60000,60000|] AND  r_Py ## [|-60000,60000|] AND  r_Sx ## [|-60000,60000|] AND  r_Sy ## [|-60000,60000|]
IMPLIES
0<=0 / 1

END winding_number_num_cert