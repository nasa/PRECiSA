interval_ulp_dp: theory
begin

  importing float_bounded_axiomatic@ieee754_double_base
  importing interval_ulp[double, safe_proj_double, RtoD, min_ulp_double, ulp_double]

  Ulp_dp(I:Interval): Interval =
    interval_ulp.Ulp(I)

  x: var real
  X,Y: var Interval

  Ulp_dp_proper: lemma
    Proper?(X) ⇒ Proper?(Ulp_dp(X))

  Ulp_dp_inclusion : lemma
    x ## X ⇒ ulp_double(x) ## Ulp_dp(X)

  Ulp_dp_Inclusion : judgement
    Ulp_dp has_type (Inclusion?(PreTrue,ulp_double))

  Ulp_dp_fundamental : lemma
    Proper?(X) ∧ X << Y ⇒ Ulp_dp(X) << Ulp_dp(Y)

  Ulp_dp_Fundamental : judgement
    Ulp_dp has_type (Fundamental?(PreTrue))

  ULP_DP(expr: RealExpr): RealExpr = FUN(PreTrue,ulp_double, Ulp_dp, expr)

end interval_ulp_dp
