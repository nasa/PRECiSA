bbiadp_div: THEORY
BEGIN

  importing bbiaXp_div
  importing interval_ulp_dp
  importing float_bounded_axiomatic@aerr_ulp__double

  R1,E1,R2,E2: VAR Interval

  aeb_div_pre4_predondition_j: JUDGEMENT
    aeb_div_pre4 HAS_TYPE (Precondition4?)

  helper1: LEMMA FORALL(R2:(Proper?),E2: (NonNeg?)):
    (Gt(Sub(R2,E2),0) OR Lt(Add(R2,E2),0)) IMPLIES  Zeroless?(Sub(Abs(R2),E2))

  aebounddp_div_ia(R1,E1,R2,E2): Interval =
    If aeb_div_pre4(R1,E1,R2,E2)
    THEN Add(
          Div(
	   Add(Mult(Abs(R2),E1),Mult(Abs(R1),E2)),
	   Sub(Mult(R2,R2),Mult(E2,Abs(R2)))),
          Div(Ulp_dp(Div(Add(Abs(R1),E1),Sub(Abs(R2),E2))),[|2|]))
    ELSE EmptyInterval
    ENDIF

  re1,re2,re3,re4: VAR RealExpr

  r1,e1,r2,e2: VAR real

  aebounddp_div_safe(r1,e1,r2,e2): real =
    IF e1 >= 0 AND e2 >= 0 AND (0<r2-e2 OR r2+e2<0)
    THEN aerr_ulp_div(r1,e1,r2,e2)
    ELSE 42 ENDIF

  AEB_DIV_inclusion_j: JUDGEMENT
    aebounddp_div_ia
    HAS_TYPE (Inclusion4?( Any?,
    	     		   Any2?,
			   Any3?,
			   aeb_div_pre4,
			   aebounddp_div_safe ))

%|- AEB_DIV_inclusion_j : PROOF
%|- (then (install-rewrites :rewrites ("aeb_div_pre4" "helper1"))
%|-  (spread (prove-inclusion-judgement)
%|-   ((rewrite "helper1")
%|-    (then (expand "NonNeg?") (lemma "inclusion_Ge") (inst? -1)
%|-     (inst? -1) (assert))
%|-    (then (expand "NonNeg?") (lemma "inclusion_Ge") (inst? -1)
%|-     (inst? -1) (assert))
%|-    (then (lemma "inclusion_Gt") (expand ">") (inst? -1 :where 1)
%|-     (inst? -1) (assert) (lemma "inclusion_Lt") (inst? -1 :where 3)
%|-     (inst? -1) (assert) (rewrite "Sub_inclusion")
%|-     (rewrite "Add_inclusion") (assert)))))
%|- QED AEB_DIV_inclusion_j

  AEB_DIV_fundmental_j: JUDGEMENT
    aebounddp_div_ia
    HAS_TYPE (Fundamental4?(Any?,Any2?, Any3?,aeb_div_pre4))

  AEB_DIV(re1,re2,re3,re4):  RealExpr =
    FUN4(Any?,Any2?,Any3?,aeb_div_pre4,
	 aebounddp_div_safe,aebounddp_div_ia,re1,re2,re3,re4)

END bbiadp_div
