bbiadp_cos: THEORY
BEGIN

  importing interval_ulp_dp
  importing axm_bnd@aerr_ulp__double
  importing interval_arith@interval_trig

  R,E: VAR Interval
  n  : VAR nat

  aebounddp_cos_ia(n)(R,E): Interval =
    If NonNeg?(E)
    THEN Add(Min(E,[|2|]),
    	     Div(Ulp_dp(Add(Abs(Cos(n)(R)),Min(E,[|2|]))),[|2|]))
    ELSE EmptyInterval
    ENDIF

  re1,re2: VAR RealExpr

  x1,x2: VAR real

  aebounddp_cos_safe(r,e: real): real =
    IF e >= 0
    THEN aerr_ulp_cos(r,e)
    ELSE 1 ENDIF

  AEB_COS_inclusion_j: JUDGEMENT
    aebounddp_cos_ia(n)
    HAS_TYPE (Inclusion2?(Any?,pre1to2b(NonNeg?),aebounddp_cos_safe))

  AEB_COS_fundmental_j: JUDGEMENT
    aebounddp_cos_ia(n)
    HAS_TYPE (Fundamental2?(Any?,pre1to2b(NonNeg?)))

  AEB_COS(n)(re1,re2):  RealExpr =
    FUN2(Any?,
         pre1to2b(NonNeg?),
	 aebounddp_cos_safe,
	 aebounddp_cos_ia(n),
	 re1,re2)

END bbiadp_cos
